/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package vue;
import instance.Request;
import java.util.Collection;
import java.util.LinkedList;
import java.util.Map;
import java.util.Set;
import javax.swing.JTree;
import javax.swing.event.TreeSelectionEvent;
import javax.swing.tree.DefaultMutableTreeNode;
import javax.swing.tree.DefaultTreeModel;
import solution.Solution;
import solution.Tournee;
import solution.TourneeTech;

/**
 *
 * @author othma
 */
public class Affichage extends javax.swing.JFrame {

    
    /**
     * Creates new form Affichage
     */
    
        public Affichage(Solution s) {
        initComponents();
        remplirJtree(s);
        getValueSelectedNode();
        setSize(500, 400);
        this.pack();
        this.setVisible(true);
    }
    
     public Affichage() {
        initComponents();
        
    }
  
    public final void remplirJtree(Solution s){
        
        DefaultMutableTreeNode dmt = new DefaultMutableTreeNode("solution");
       jLabel1.setText(s.getInstance().getNom());
         Map<Integer,LinkedList<Tournee>> liste = s.getListeTournees();
        for (int i = 1; i <= s.getInstance().getDays(); i++) {
				 DefaultMutableTreeNode dmt1 = new DefaultMutableTreeNode("Jour"+i);
                                 dmt.add(dmt1);
                                
				LinkedList<Tournee> tournees = liste.get(i);
				LinkedList<Tournee> truck = new LinkedList<>();
				int nbTruck = 0;
				LinkedList<Tournee> tech = new LinkedList<>();
				LinkedList<Integer> technician = new LinkedList<>();
				int nbTech = 0;
				if(tournees != null) {
					for (Tournee t : tournees) {
						if(!t.isEmpty()) {
							if (t instanceof TourneeTech) {
								tech.add(t);
								if (!technician.contains(((TourneeTech) t).getTechnician().getIdTechnician())) {
									technician.add(((TourneeTech) t).getTechnician().getIdTechnician());
									nbTech++;
								}
							} else {
								truck.add(t);
								nbTruck++;
							}
						}
					}
				}
				int idTruck = 1;
				for (Tournee tournee : truck) {
                                        DefaultMutableTreeNode dmt2 = new DefaultMutableTreeNode("Tournee Truck "+idTruck);
                                         DefaultMutableTreeNode dmt4 = new DefaultMutableTreeNode("requests tournee truck");
					String chaine = "" + idTruck++;
                                         
                                        dmt1.add(dmt2);
                                        dmt2.add(dmt4);
                                        
					LinkedList<Request> requests = tournee.getListRequest();
					for (Request request : requests) {
                                            DefaultMutableTreeNode dmt7 = new DefaultMutableTreeNode(request.getId());
                                            dmt4.add(dmt7);
						chaine += " " + request.getId();
                                                
					}
                                       
				}   
				for (Tournee tournee : tech) {
					LinkedList<Request> requests = tournee.getListRequest();
                                         DefaultMutableTreeNode dmt3 = new DefaultMutableTreeNode("Tournee Tech"+((TourneeTech) tournee).getTechnician().getIdTechnician());
                                         DefaultMutableTreeNode dmt5 = new DefaultMutableTreeNode("requests tournee tech");
                                         dmt1.add(dmt3);
                                         dmt3.add(dmt5);
					String chaine = "" + ((TourneeTech) tournee).getTechnician().getIdTechnician();
					for (Request request : requests) {
                                            DefaultMutableTreeNode dmt6 = new DefaultMutableTreeNode(request.getId());
                                            dmt5.add(dmt6);
						chaine += " " + request.getId();
                                                
					}
					
				}
			}
        
        
       
        
       
        DefaultTreeModel dtm = new DefaultTreeModel(dmt);
        jTree1.setModel(dtm);
    }
    
    public void getValueSelectedNode(){
        DefaultMutableTreeNode selectednode= (DefaultMutableTreeNode)jTree1.getLastSelectedPathComponent();
         if (selectednode == null)
    //Nothing is selected.     
    return;
           Object nodeInfo = selectednode.getUserObject();
           System.out.println(nodeInfo);
    }
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        filler1 = new javax.swing.Box.Filler(new java.awt.Dimension(0, 0), new java.awt.Dimension(0, 0), new java.awt.Dimension(32767, 32767));
        jScrollPane1 = new javax.swing.JScrollPane();
        jTree1 = new javax.swing.JTree();
        jLabel1 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        javax.swing.tree.DefaultMutableTreeNode treeNode1 = new javax.swing.tree.DefaultMutableTreeNode("root");
        jTree1.setModel(new javax.swing.tree.DefaultTreeModel(treeNode1));
        jScrollPane1.setViewportView(jTree1);

        jLabel1.setText("jLabel1");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap(117, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 251, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(filler1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(138, 138, 138))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 127, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(152, 152, 152))))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(filler1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(301, 301, 301))
            .addGroup(layout.createSequentialGroup()
                .addGap(33, 33, 33)
                .addComponent(jLabel1)
                .addGap(18, 18, 18)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 270, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(83, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Affichage.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Affichage.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Affichage.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Affichage.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Affichage().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.Box.Filler filler1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTree jTree1;
    // End of variables declaration//GEN-END:variables
}
